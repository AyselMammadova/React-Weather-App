{"version":3,"sources":["City.jsx","App.js","index.js"],"names":["City","_ref","city","console","log","react_default","a","createElement","className","name","main","temp","weather","wind","speed","sys","country","App","key","_useState","useState","_useState2","Object","slicedToArray","search","setSearch","_useState3","_useState4","setCity","useEffect","_getWeather","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","axios","get","concat","sent","data","t0","error","stop","apply","this","arguments","getWeather","value","onChange","e","target","type","placeholder","src_City","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"2QAkBeA,SAfF,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KAEd,OADEC,QAAQC,IAAIF,GAEZG,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,oBAAWF,EAAAC,EAAAC,cAAA,YAAOL,EAAKO,OACvBJ,EAAAC,EAAAC,cAAA,mBAAUF,EAAAC,EAAAC,cAAA,YAAOL,EAAKQ,KAAKC,KAAjB,WACVN,EAAAC,EAAAC,cAAA,sBAAaF,EAAAC,EAAAC,cAAA,YAAOL,EAAKU,QAAQ,GAAGF,OACpCL,EAAAC,EAAAC,cAAA,yBAAgBF,EAAAC,EAAAC,cAAA,YAAOL,EAAKW,KAAKC,QACjCT,EAAAC,EAAAC,cAAA,sBAAaF,EAAAC,EAAAC,cAAA,YAAOL,EAAKa,IAAIC,cC4BxBC,MAnCf,WACE,IAAMC,EAAM,mCADCC,EAEeC,mBAAS,QAFxBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAENK,EAFMH,EAAA,GAEEI,EAFFJ,EAAA,GAAAK,EAGWN,qBAHXO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAGNxB,EAHMyB,EAAA,GAGAC,EAHAD,EAAA,GAsBb,OAhBAE,oBAAU,WAAM,SAAAC,IAAA,OAAAA,EAAAR,OAAAS,EAAA,EAAAT,CAAAU,EAAA1B,EAAA2B,KACd,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAA1B,EAAA8B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAE2BC,IAAMC,IAAN,qDAAAC,OAA+DlB,EAA/D,WAAAkB,OAA+ExB,EAA/E,kBAF3B,QAEUiB,EAFVE,EAAAM,OAIMf,EAAQO,EAASS,MAJvBP,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SAOIlC,QAAQ2C,MAART,EAAAQ,IAPJ,yBAAAR,EAAAU,SAAAb,EAAA,kBADcc,MAAAC,KAAAC,YAAA,WAAApB,EAAAkB,MAAAC,KAAAC,WAYdC,IAEA,CAAC3B,IAGHnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,yCACAF,EAAAC,EAAAC,cAAA,SACE6C,MAAO5B,EACP6B,SAAU,SAACC,GAAD,OAAO7B,EAAU6B,EAAEC,OAAOH,QACpCI,KAAK,OAAOC,YAAY,iBAEzBvD,GAAQG,EAAAC,EAAAC,cAACmD,EAAD,CAAMxD,KAAMA,MC9BdyD,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH1D,EAAAC,EAAAC,cAACF,EAAAC,EAAM0D,WAAP,KACE3D,EAAAC,EAAAC,cAAC0D,EAAD","file":"static/js/main.181a714e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst City = ({ city }) => {\r\n    console.log(city);\r\n  return (\r\n    <div>\r\n        <div className=\"result\">\r\n          <h2>Place: <span>{city.name}</span></h2>\r\n          <h3>Temp: <span>{city.main.temp} Â°C</span></h3>\r\n          <h3>Weather: <span>{city.weather[0].main}</span></h3>\r\n          <h3>Wind speed: <span>{city.wind.speed}</span></h3>\r\n          <h3>Country: <span>{city.sys.country}</span></h3>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default City;","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport City from './City';\n\nfunction App() {\n  const key = \"469a2d487b18684def045a04c93e7a85\";\n  const [search, setSearch] = useState('Baku');\n  const [city, setCity] = useState();\n\n  \n  useEffect(() => {\n    async function getWeather() {\n      try {\n        const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${search}&appid=${key}&units=metric`);\n        if(response) {\n          setCity(response.data);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    \n    getWeather();\n    \n  },[search]);\n \n  return (\n  <div className=\"App\">\n      <p>Search place and see weather</p>\n      <input \n        value={search}\n        onChange={(e) => setSearch(e.target.value)}\n        type=\"text\" placeholder=\"Type here...\" />\n\n      {city && <City city={city} />}\n  </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}